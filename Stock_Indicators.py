# -*- coding: utf-8 -*-
"""Stock Indicators.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UJUUvbJRrIwv4YzjS_3nfeejBNSKQF5R
"""

# Plot multiple technical indicators

# Importing the libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

# Store the data
df = pd.read_csv('/content/drive/MyDrive/Miniproject/ANDHRACEMT.NS.csv')

# Set the date as the index
df = df.set_index(pd.DatetimeIndex(df['Date'].values))

# Show the data
df

# Create functions to calculate SMA & EMA
# Create the Simple Moving Average (SMA)

def SMA(data, period=30, column='Close'):
  return data[column].rolling(window=period).mean()

# Create the Exponential Moving Average (EMA)

def EMA(data, period=20, column='Close'):
  return data[column].ewm(span=period, adjust=False).mean()

# Calculate the Moving Averages Convergence/Divergence (MACD)

def MACD(data, period_long= 26, period_short= 12, period_signal= 9, column='Close'):
  # Calculate the short term exponential moving average
  ShortEMA= EMA(data, period_short, column=column)
  # Calculate the long term exponential moving average
  LongEMA= EMA(data, period_long, column=column)
  # Calculate Moving Averages Convergence/Divergence (MACD)
  data['MACD']= ShortEMA - LongEMA
  # Calculate the signal line
  data['Signal_Line']= EMA(data, period_signal, column='MACD')
  return data

# Create a function to compute Relative Strength Index (RSI)

def RSI(data, period= 14, column='Close'):
  delta= data[column].diff(1)
  delta= delta[1:]
  up= delta.copy()
  down= delta.copy()
  up[up <0] = 0
  down[down >0] = 0
  data['up'] = up
  data['down'] = down
  AVG_Gain = SMA(data, period, column='up')
  AVG_Loss = abs(SMA(data, period, column='down'))
  RS= AVG_Gain/AVG_Loss
  RSI= 100.0 - (100.0/(1.0 + RS))

  data['RSI'] = RSI
  return data

# Create add to the data set

MACD(df)
RSI(df)
df['SMA'] = SMA(df)
df['EMA'] = EMA(df)

# Show the data
df

# Plot the chart
column_list = ['MACD', 'Signal_Line']
df[column_list].plot(figsize=(18.3, 9.6))
plt.title('MACD for ANDHRA CEMENTS NSE')
plt.ylabel('INR Price')
plt.xlabel('Date')
plt.show()

# Plot the chart
column_list = ['SMA', 'Close']
df[column_list].plot(figsize=(18.3, 9.6))
plt.title('SMA for ANDHRA CEMENTS NSE')
plt.ylabel('INR Price')
plt.xlabel('Date')
plt.show()

# Plot the chart
column_list = ['EMA', 'Close']
df[column_list].plot(figsize=(18.3, 9.6))
plt.title('EMA for ANDHRA CEMENTS NSE')
plt.ylabel('INR Price')
plt.xlabel('Date')
plt.show()

# Plot the chart
column_list = ['RSI']
df[column_list].plot(figsize=(18.3, 9.6))
plt.title('RSI for ANDHRA CEMENTS NSE')
plt.ylabel('INR Price')
plt.xlabel('Date')
plt.show()